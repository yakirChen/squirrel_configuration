# compile from nginx source 

# http://www.zlib.net
# http://www.pcre.org
# http://www.nginx.org
# http://labs.frickle.com/nginx_ngx_cache_purge/

#  ngx_cache_purge   模块下载地址： http://labs.frickle.com/nginx_ngx_cache_purge/
# ./configure --prefix=${NGINX}  \
#     --sbin-path=${NGINX}/nginx  \
#     --conf-path=${NGINX}/nginx.conf  \
#     --pid-path=${NGINX}/nginx.pid \
#     --with-threads \
#     --with-stream \
#     --with-http_v2_module \
#     --with-http_ssl_module \
#     --http-log-path=/Volumes/To/logs/nginx/access.log \
#     --error-log-path=/Volumes/To/logs/nginx/error.log \
#     --lock-path=/Volumes/To/logs/nginx/nginx.lock \
#     --with-http_stub_status_module \
#     --with-http_realip_module \
#     --with-pcre=../pcre-8.42  \
#     --with-zlib=../zlib-1.2.11  \
#     --with-openssl=../libressl-2.8.3 \
#     --add-module=../ngx_cache_purge-2.3 && \
#     make -j 12 && make install
# # 开启 & 关闭
# sudo nginx
# sudo nginx -s stop

# make -j4 && make install 
#
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip on;
    gzip_min_length 4k;
    gzip_buffers 4 16k;
    #gzip_http_version 1.0;
    gzip_comp_level 9;
    gzip_types application/json text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_vary off;
    gzip_disable "MSIE [1-6]\.";

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    
#    include vhosts/yakirchen.github.io.conf;
#   include vhosts/elastic-hq.conf;
    # include vhosts/http2s.conf;
    # include vhosts/proxy.conf;
    include vhosts/ssh.conf;
    
}
